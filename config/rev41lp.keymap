/*
 * Copyright (c) 2024 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJST   3
#define S_SECT GRAVE // §
#define S_PLUS MINUS // +
#define S_ACUT EQUAL // ´ (dead)
#define S_ARNG LBRC  // Å
#define S_DIAE RBRC  // ¨ (dead)
#define S_ODIA SEMI  // Ö
#define S_ADIA SQT   // Ä
#define S_QUOT NUHS  // '
#define S_LABK NUBS  // <
#define S_MINS FSLH  // -
#define S_EXLM LS(N1)     // !
#define S_DQUO LS(N2)     // "
#define S_HASH LS(N3)     // #
#define S_CURR LS(N4)     // ¤
#define S_PERC LS(N5)     // %
#define S_AMPR LS(N6)     // &
#define S_SLSH LS(N7)     // /
#define S_LPRN LS(N8)     // (
#define S_RPRN LS(N9)     // )
#define S_EQL  LS(N0)     // =
#define S_QUES LS(MINUS) // ?
#define S_GRV  LS(EQUAL) // ` (dead)
#define S_CIRC LS(RBRC) // ^ (dead)
#define S_ASTR LS(NUHS) // *
#define S_RABK LS(NUBS) // >
#define S_AT   RA(N2)     // @
#define S_PND  RA(N3)     // £
#define S_DLR  RA(N4)     // $
#define S_EURO RA(N5)     // €
#define S_LCBR RA(N7)     // {
#define S_LBRC RA(N8)     // [
#define S_RBRC RA(N9)     // ]
#define S_RCBR RA(N0)     // }
#define S_BSLS RA(MINUS) // (backslash)
#define S_TILD RA(RBRC) // ~ (dead)
#define S_PIPE RA(NUBS) // |
#define WLEFT  LC(LEFT)
#define WRIGHT LC(RIGHT)

/ {
    behaviors {
        sh_cl: shift_capslock {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHIFT>, <&kp CAPSLOCK>;
        };

        ht_tf: hold_tap_tap_pref {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;

            label = "HT_TF";
            tapping-term-ms = <200>;
        };
    };

    cond_layers {
        compatible = "zmk,conditional-layers";

        trilayer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    macros {
        send_leq: send_lt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp NUBS &kp LS(N0)>;

            label = "SEND_LT";
        };

        send_geq: send_geq {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LS(NUBS) &kp LS(N0)>;

            label = "SEND_GEQ";
        };

        send_neq: send_neq {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp EXCL &kp LS(N0)>;

            label = "SEND_NEQ";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------
            // |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  |  Å  |
            // | BSPS |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  Ö  |  Ä  |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  -  |  '  |
            //                          | DEL | LWR |SPC| RSE | TAB |

            bindings = <
&lt RAISE ESC      &kp Q          &kp W              &kp E          &kp R         &kp T
&kp Y              &kp U          &kp I              &kp O          &kp P         &kp LBKT
&ht_tf LCTRL BSPC  &kp A          &kp S              &kp D          &kp F         &kp G
&kp H              &kp J          &kp K              &kp L          &kp SEMI      &ht_tf RCTRL SQT
&sh_cl             &kp Z          &kp X              &kp C          &kp V         &kp B
&kp N              &kp M          &kp COMMA          &kp DOT        &kp FSLH      &ht_tf RSHIFT NUHS
&mt LALT DEL       &lt LOWER RET  &ht_tf LGUI SPACE  &lt RAISE RET  &mt RALT TAB
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------
            // |     |  !  |  @  |  {  |  }  |  |  |   |  £  |  €  |  ?  |  §  |  ¤  |  ¨  |
            // |     |  #  |  $  |  (  |  )  |  `  |   |  +  |  -  |  /  |  *  |  %  |  "  |
            // |     |  %  |  ^  |  [  |  ]  |  ~  |   |  &  |  =  |  <  |  >  |  \  |  ´  |
            //                         |     |     |   | ADJ |     |

            bindings = <
&send_neq   &kp LS(N1)  &kp RA(N2)     &kp RA(N7)    &kp RA(N0)     &kp RA(NUBS)
&kp RA(N3)  &kp RA(N5)  &kp LS(MINUS)  &kp GRAVE     &kp LS(N4)     &kp RBKT
&send_geq   &kp LS(N3)  &kp RA(N4)     &kp LS(N8)    &kp LS(N9)     &kp LS(EQUAL)
&kp MINUS   &kp FSLH    &kp LS(N7)     &kp LS(NUHS)  &kp LS(N5)     &kp LS(N2)
&send_leq   &kp LS(N5)  &kp LS(RBRC)   &kp RA(N8)    &kp RA(N9)     &kp RA(RIGHT_BRACKET)
&kp LS(N6)  &kp LS(N0)  &kp NUBS       &kp LS(NUBS)  &kp RA(MINUS)  &kp EQUAL
&trans      &trans      &trans         &trans        &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------
            // |  §   |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | MUTE |
            // |  F1  |  F2 |  F3 |  F4 |  F5 |  F6 |   | LEFT| DOWN|  UP | RGHT| PGUP| VOL+ |
            // |  F7  |  F8 |  F9 | F10 | F11 | F12 |   |WLEFT|WRGHT| HOME| END | PGDN| VOL- |
            //                          |     | ADJ |   |    |     |

            bindings = <
&kp GRAVE     &kp N1         &kp N2    &kp N3     &kp N4     &kp N5
&kp N6        &kp N7         &kp N8    &kp N9     &kp N0     &kp C_MUTE
&kp F1        &kp F2         &kp F3    &kp F4     &kp F5     &kp F6
&kp LEFT      &kp DOWN       &kp UP    &kp RIGHT  &kp PG_UP  &kp C_VOL_UP
&kp F7        &kp F8         &kp F9    &kp F10    &kp F11    &kp F12
&kp LC(LEFT)  &kp LC(RIGHT)  &kp HOME  &kp END    &kp PG_DN  &kp C_VOL_DN
&trans        &trans         &trans    &trans     &trans
            >;
        };

        adjust_layer {
            // ------------------------------------------------------------------------------
            // |     |     |     | BL- | BLT | BL+ |   | BT1 | BT2 | BT3 | BT4 | BT5 |BT CLR|
            // |     |     |     |     |     |     |   |     |     |     |     |     |      |
            // |     |     |     |     |     |     |   |RESET|     |     |     |     |      |
            //                         |     |     |   |     |     |

            bindings = <
&soft_off     &bl BL_OFF    &bl BL_DEC    &bl BL_TOG         &bl BL_INC         &bl BL_ON
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3       &bt BT_SEL 4       &bt BT_CLR
&none         &none         &none         &ext_power EP_OFF  &ext_power EP_TOG  &ext_power EP_ON
&bt BT_PRV    &bt BT_NXT    &out OUT_BLE  &none              &none              &none
&none         &none         &none         &none              &none              &bootloader
&sys_reset    &none         &out OUT_USB  &none              &none              &none
&trans        &trans        &trans        &trans             &trans
            >;
        };
    };
};
